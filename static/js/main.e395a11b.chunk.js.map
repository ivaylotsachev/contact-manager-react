{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","index","findIndex","el","updatedContacts","splice","Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","show","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","Link","to","style","fontSize","color","Contacts","react","map","contacts_Contact","Header","branding","href","NavLink","exact","activeClassName","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","reset","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2RAGMA,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAIvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAGxC,IAAK,iBAAL,IACQA,EAAaL,EAAbK,SACFO,EAAQP,EAASQ,UAAU,SAAAC,GAAE,OAAIA,EAAGN,KAAOP,EAAOQ,QAAQD,KAE1DO,EAAe,GAAAL,OAAAP,OAAAQ,EAAA,EAAAR,CACdE,EAASW,OAAO,EAAGJ,IADL,CAEjBX,EAAOQ,SAFUN,OAAAQ,EAAA,EAAAR,CAGdE,EAASW,OAAOJ,EAAQ,KAG7B,OAAOT,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUU,IAGd,QACE,OAAOf,IAIPiB,EAAUC,IAAMC,gBAETC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAApB,OAAA6B,EAAA,EAAA7B,CAAAsB,MAAAH,EAAAnB,OAAA8B,EAAA,EAAA9B,CAAAiB,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAf,OAAAmB,MACE7B,MAAQ,CACNK,SAAU,GACV+B,SAAU,SAAAnC,GACRsB,EAAKc,SAAS,SAAArC,GAAK,OAAID,EAAQC,EAAOC,OAJ5CsB,EAAA,OAAApB,OAAAmC,EAAA,EAAAnC,CAAAiB,EAAAC,GAAAlB,OAAAoC,EAAA,EAAApC,CAAAiB,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAyC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EASsBC,IAAMC,IAAI,8CAThC,OASUN,EATVE,EAAAK,KAUI9B,KAAKY,SAAS,CAAEhC,SAAU2C,EAAIQ,OAVlC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAcI,OACEiB,EAAAb,EAAAc,cAAC1C,EAAQG,SAAT,CAAkBqB,MAAOhB,KAAKzB,OAC3ByB,KAAKmC,MAAMC,cAhBpBzC,EAAA,CAA8B0C,aAsBjBC,EAAW9C,EAAQ8C,iBCajBC,6MAtEbhE,MAAQ,CACNiE,MAAM,KAGRC,YAAc,WACZ3C,EAAKc,SAAS,CAAE4B,MAAO1C,EAAKvB,MAAMiE,UAGpCE,oDAAgB,SAAApB,EAAOvC,EAAI4B,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,IAAMe,OAAN,8CAAA1D,OAA2DF,IAFrD,OAGZ4B,EAAS,CAAElC,KAAM,iBAAkBO,QAASD,IAHhC0C,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAmB,GAAAnB,EAAA,SAKZd,EAAS,CAAElC,KAAM,iBAAkBO,QAASD,IALhC,wBAAA0C,EAAAO,SAAAV,EAAAtB,KAAA,4IASP,IAAA6C,EAAA7C,KAAA8C,EAC4B9C,KAAKmC,MAAMrD,QAAtCC,EADD+D,EACC/D,GAAIgE,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MAEzB,OACEhB,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SAER,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,SACbjB,EAAAb,EAAAc,cAAA,KACEgB,UAAU,4BACVC,QAAS,kBAAMN,EAAKJ,YAAY1D,MAElCkD,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,6BAA6BH,IAE7Cd,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,UACbjB,EAAAb,EAAAc,cAACkB,EAAA,EAAD,CAAMC,GAAE,gBAAApE,OAAkBF,GAAMmE,UAAU,cACxCjB,EAAAb,EAAAc,cAAA,KACEgB,UAAU,oCACVI,MAAO,CAAEC,SAAU,OAAQC,MAAO,YAGtCvB,EAAAb,EAAAc,cAAA,KACEgB,UAAU,2CACVI,MAAO,CAAEC,SAAU,OAAQC,MAAO,OAClCL,QAAS,kBAAMN,EAAKH,cAAc3D,EAAI4B,QAK3CkC,EAAKtE,MAAMiE,MACVP,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,uBACbjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,cACZjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBACZjB,EAAAb,EAAAc,cAAA,mBADF,IACiBc,GAEjBf,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBACZjB,EAAAb,EAAAc,cAAA,mBADF,IACiBe,eA1DfZ,aCgCPoB,mLA3BX,OACExB,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACApC,EAAaoC,EAAbpC,SAER,OACEqD,EAAAb,EAAAc,cAACwB,EAAA,SAAD,KACG9E,EAASuB,OAAS,EACjB8B,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,kBACZjB,EAAAb,EAAAc,cAAA,QAAMgB,UAAU,eAAhB,aADF,QAIAjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,kBACZjB,EAAAb,EAAAc,cAAA,QAAMgB,UAAU,eAAhB,oBAGHtE,EAAS+E,IAAI,SAAA7E,GAAO,OACnBmD,EAAAb,EAAAc,cAAC0B,EAAD,CAAS7C,IAAKjC,EAAQC,GAAID,QAASA,gBAnB5BuD,sBCJjBwB,EAAS,SAAA1B,GAAS,IACd2B,EAAa3B,EAAb2B,SAER,OACE7B,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,8EACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,QAAM6B,KAAK,GAAGb,UAAU,gBACrBY,GAEH7B,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,6BACZjB,EAAAb,EAAAc,cAAC8B,EAAA,EAAD,CACEX,GAAG,IACHH,UAAU,WACVe,OAAK,EACLC,gBAAgB,aAJlB,QASAjC,EAAAb,EAAAc,cAAC8B,EAAA,EAAD,CACEX,GAAG,eACHH,UAAU,WACVgB,gBAAgB,aAHlB,eAQAjC,EAAAb,EAAAc,cAAC8B,EAAA,EAAD,CACEX,GAAG,SACHH,UAAU,WACVgB,gBAAgB,aAHlB,cAcZL,EAAOM,aAAe,CACpBL,SAAU,UAOGD,yCCjDTO,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAvB,EAMIsB,EANJtB,KACA/B,EAKIqD,EALJrD,MACAuD,EAIIF,EAJJE,YACA9F,EAGI4F,EAHJ5F,KACA+F,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACExC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,mBACbjB,EAAAb,EAAAc,cAAA,SAAOwC,QAAS3B,GAAOuB,GACvBrC,EAAAb,EAAAc,cAAA,SACEzD,KAAMA,EACNyE,UAAWyB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbxB,KAAMA,EACN/B,MAAOA,EACPwD,SAAUA,IAEXC,GAASxC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,oBAAoBuB,KAcnDL,EAAeD,aAAe,CAC5B1F,KAAM,QAGO2F,QCgEAS,6MArGbtG,MAAQ,CACNwE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP6B,OAAQ,MAGVN,SAAW,SAAAO,GAAC,OAAIjF,EAAKc,SAALlC,OAAAsG,EAAA,EAAAtG,CAAA,GAAiBqG,EAAEE,OAAOlC,KAAOgC,EAAEE,OAAOjE,WAE1DkE,+CAAW,SAAA5D,EAAOyD,EAAGpE,GAAV,IAAAwE,EAAApC,EAAAC,EAAAC,EAAAmC,EAAA7D,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACToD,EAAEM,iBADOF,EAGsBrF,EAAKvB,MAA5BwE,EAHCoC,EAGDpC,KAAMC,EAHLmC,EAGKnC,MAAOC,EAHZkC,EAGYlC,MACfmC,EAAa,CAAErC,OAAMC,QAAOC,SAGrB,KAATF,EAPK,CAAAtB,EAAAE,KAAA,eAQP7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE/B,KAAM,sBARzBtB,EAAA6D,OAAA,oBAYK,KAAVtC,EAZK,CAAAvB,EAAAE,KAAA,eAaP7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE9B,MAAO,uBAb1BvB,EAAA6D,OAAA,oBAiBK,KAAVrC,EAjBK,CAAAxB,EAAAE,KAAA,gBAkBP7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE7B,MAAO,sBAlB1BxB,EAAA6D,OAAA,yBAAA7D,EAAAE,KAAA,GAsBSC,IAAM2D,KACtB,6CACAH,GAxBO,QAsBH7D,EAtBGE,EAAAK,KA2BTnB,EAAS,CAAElC,KAAM,cAAeO,QAASuC,EAAIQ,OAC7CjC,EAAK0F,QACL1F,EAAKqC,MAAMsD,QAAQC,KAAK,KA7Bf,yBAAAjE,EAAAO,SAAAV,EAAAtB,wIAiCTA,KAAKY,SAAS,CAAEmC,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAI6B,OAAQ,sCAGjD,IAAAjC,EAAA7C,KAAA2F,EACgC3F,KAAKzB,MAApCwE,EADD4C,EACC5C,KAAMC,EADP2C,EACO3C,MAAOC,EADd0C,EACc1C,MAAO6B,EADrBa,EACqBb,OAE5B,OACE7C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SAER,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,uBACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,yBACbjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,QAAd,gBAEFjB,EAAAb,EAAAc,cAAA,QAAMgD,SAAU,SAAAH,GAAC,OAAIlC,EAAKqC,SAASH,EAAGpE,KACpCsB,EAAAb,EAAAc,cAAC0D,EAAD,CACE7C,KAAK,OACL/B,MAAO+B,EACPwB,YAAY,aACZD,MAAM,OACNE,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO/B,OAGhBd,EAAAb,EAAAc,cAAC0D,EAAD,CACE7C,KAAK,QACLtE,KAAK,QACLuC,MAAOgC,EACPuB,YAAY,cACZD,MAAM,QACNE,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO9B,QAGhBf,EAAAb,EAAAc,cAAC0D,EAAD,CACE7C,KAAK,QACL/B,MAAOiC,EACPsB,YAAY,cACZD,MAAM,QACNE,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO7B,QAGhBhB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,UAAQzD,KAAK,SAASyE,UAAU,6BAAhC,mBAzFOb,aCyHVwD,6MAxHbtH,MAAQ,CACNwE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP6B,OAAQ,MAmBVN,SAAW,SAAAO,GAAC,OAAIjF,EAAKc,SAALlC,OAAAsG,EAAA,EAAAtG,CAAA,GAAiBqG,EAAEE,OAAOlC,KAAOgC,EAAEE,OAAOjE,WAE1DkE,+CAAW,SAAA5D,EAAOyD,EAAGpE,GAAV,IAAAwE,EAAApC,EAAAC,EAAAC,EAAAlE,EAAA+G,EAAAvE,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACToD,EAAEM,iBADOF,EAGsBrF,EAAKvB,MAA5BwE,EAHCoC,EAGDpC,KAAMC,EAHLmC,EAGKnC,MAAOC,EAHZkC,EAGYlC,MAGR,KAATF,EANK,CAAAtB,EAAAE,KAAA,eAOP7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE/B,KAAM,sBAPzBtB,EAAA6D,OAAA,oBAWK,KAAVtC,EAXK,CAAAvB,EAAAE,KAAA,eAYP7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE9B,MAAO,uBAZ1BvB,EAAA6D,OAAA,oBAgBK,KAAVrC,EAhBK,CAAAxB,EAAAE,KAAA,gBAiBP7B,EAAKc,SAAS,CAAEkE,OAAQ,CAAE7B,MAAO,sBAjB1BxB,EAAA6D,OAAA,yBAqBDvG,EAAOe,EAAKqC,MAAM4D,MAAMC,OAAxBjH,GACF+G,EAAa,CAAE/C,OAAMC,QAAOC,SAtBzBxB,EAAAE,KAAA,GAwBSC,IAAMqE,IAAN,8CAAAhH,OAC8BF,GAC9C+G,GA1BO,QAwBHvE,EAxBGE,EAAAK,KA6BTnB,EAAS,CAAElC,KAAM,iBAAkBO,QAASuC,EAAIQ,OAEhDjC,EAAK0F,QACL1F,EAAKqC,MAAMsD,QAAQC,KAAK,KAhCf,yBAAAjE,EAAAO,SAAAV,EAAAtB,6QAjBDjB,EAAOiB,KAAKmC,MAAM4D,MAAMC,OAAxBjH,YAEU6C,IAAMC,IAAN,8CAAA5C,OAC8BF,WAD1CwC,SAIAzC,EAAUyC,EAAIQ,KAEpB/B,KAAKY,SAAS,CACZmC,KAAMjE,EAAQiE,KACdC,MAAOlE,EAAQkE,MACfC,MAAOnE,EAAQmE,0IA0CjBjD,KAAKY,SAAS,CAAEmC,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAI6B,OAAQ,sCAGjD,IAAAjC,EAAA7C,KAAA2F,EACgC3F,KAAKzB,MAApCwE,EADD4C,EACC5C,KAAMC,EADP2C,EACO3C,MAAOC,EADd0C,EACc1C,MAAO6B,EADrBa,EACqBb,OAE5B,OACE7C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SAER,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,uBACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,yBACbjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,QAAd,iBAEFjB,EAAAb,EAAAc,cAAA,QAAMgD,SAAU,SAAAH,GAAC,OAAIlC,EAAKqC,SAASH,EAAGpE,KACpCsB,EAAAb,EAAAc,cAAC0D,EAAD,CACE7C,KAAK,OACL/B,MAAO+B,EACPwB,YAAY,aACZD,MAAM,OACNE,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO/B,OAGhBd,EAAAb,EAAAc,cAAC0D,EAAD,CACE7C,KAAK,QACLtE,KAAK,QACLuC,MAAOgC,EACPuB,YAAY,cACZD,MAAM,QACNE,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO9B,QAGhBf,EAAAb,EAAAc,cAAC0D,EAAD,CACE7C,KAAK,QACL/B,MAAOiC,EACPsB,YAAY,cACZD,MAAM,QACNE,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO7B,QAGhBhB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,UAAQzD,KAAK,SAASyE,UAAU,6BAAhC,sBA5GQb,aCOX6D,EAZD,WACZ,OACEjE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,aAAd,yBACAjB,EAAAb,EAAAc,cAAA,WACAD,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,iCACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,gDACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,kBAAb,kBCUSiD,EAjBE,SAAAhE,GACf,OACEF,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,aACZjB,EAAAb,EAAAc,cAAA,QAAMgB,UAAU,eAAhB,OADF,mBAGAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,mCACAjB,EAAAb,EAAAc,cAAA,UACEgB,UAAU,uBACVC,QAAS,kBAAMhB,EAAMsD,QAAQC,KAAK,OAFpC,qBCiCSU,mLArBX,OACEnE,EAAAb,EAAAc,cAACmE,EAAD,KACEpE,EAAAb,EAAAc,cAACoE,EAAA,EAAD,KACErE,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,OACbjB,EAAAb,EAAAc,cAACqE,EAAD,CAAQzC,SAAS,oBACjB7B,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAACsE,EAAA,EAAD,KACEvE,EAAAb,EAAAc,cAACuE,EAAA,EAAD,CAAOxC,OAAK,EAACyC,KAAK,IAAIC,UAAWlD,IACjCxB,EAAAb,EAAAc,cAACuE,EAAA,EAAD,CAAOxC,OAAK,EAACyC,KAAK,SAASC,UAAWT,IACtCjE,EAAAb,EAAAc,cAACuE,EAAA,EAAD,CAAOxC,OAAK,EAACyC,KAAK,eAAeC,UAAW9B,IAC5C5C,EAAAb,EAAAc,cAACuE,EAAA,EAAD,CAAOxC,OAAK,EAACyC,KAAK,oBAAoBC,UAAWd,IACjD5D,EAAAb,EAAAc,cAACuE,EAAA,EAAD,CAAOC,KAAK,GAAGC,UAAWR,gBAbxB9D,aCPEuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2DCZNiB,IAASC,OAAOhF,EAAAb,EAAAc,cAACgF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e395a11b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case 'UPDATE_CONTACT':\n      let { contacts } = state;\n      let index = contacts.findIndex(el => el.id === action.payload.id);\n\n      let updatedContacts = [\n        ...contacts.splice(0, index),\n        action.payload,\n        ...contacts.splice(index + 1)\n      ];\n\n      return {\n        ...state,\n        contacts: updatedContacts\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    show: false\n  };\n\n  onShowClick = () => {\n    this.setState({ show: !this.state.show });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (error) {\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-4\">\n              <div className=\"card-header\">\n                <div className=\"title\">\n                  <i\n                    className=\"fa fa-sort-down mr-3 mb-0\"\n                    onClick={() => this.onShowClick(id)}\n                  />\n                  <h6 className=\"card-title text-left mb-0\">{name}</h6>\n                </div>\n                <div className=\"action\">\n                  <Link to={`contact/edit/${id}`} className=\"pull-right\">\n                    <i\n                      className=\"fas fa-pencil-alt pull-right mr-2\"\n                      style={{ fontSize: '14px', color: 'black' }}\n                    />\n                  </Link>\n                  <i\n                    className=\"fas fa-times pull-right icon-delete mb-0\"\n                    style={{ fontSize: '14px', color: 'red' }}\n                    onClick={() => this.onDeleteClick(id, dispatch)}\n                  />\n                </div>\n              </div>\n\n              {this.state.show && (\n                <div className=\"card-body text-left\">\n                  <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                      <b>email:</b> {email}\n                    </li>\n                    <li className=\"list-group-item\">\n                      <b>phone:</b> {phone}\n                    </li>\n                  </ul>\n                </div>\n              )}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component, Fragment } from 'react';\n\n/* Components */\nimport Contact from './Contact';\n\n/* Consumer */\nimport { Consumer } from '../../context.js';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n\n          return (\n            <Fragment>\n              {contacts.length > 0 ? (\n                <h1 className=\"display-4 mb-4\">\n                  <span className=\"text-danger\">Contacts </span>List\n                </h1>\n              ) : (\n                <h1 className=\"display-4 mb-4\">\n                  <span className=\"text-danger\">No items found </span>\n                </h1>\n              )}\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-light justify-content-between mb-3\">\n      <div className=\"container\">\n        <span href=\"\" className=\"navbar-brand\">\n          {branding}\n        </span>\n        <div>\n          <ul className=\"navbar navbar-nav mr-auto\">\n            <NavLink\n              to=\"/\"\n              className=\"nav-link\"\n              exact\n              activeClassName=\"is-active\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/contact/add\"\n              className=\"nav-link\"\n              activeClassName=\"is-active\"\n            >\n              Add Contact\n            </NavLink>\n\n            <NavLink\n              to=\"/about\"\n              className=\"nav-link\"\n              activeClassName=\"is-active\"\n            >\n              About\n            </NavLink>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group px-4\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport uuid from 'uuid';\nimport axios from 'axios';\n\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (e, dispatch) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n    const newContact = { name, email, phone };\n\n    /* Check for errors */\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Name is required' } });\n      return;\n    }\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n    this.reset();\n    this.props.history.push('/');\n  };\n\n  reset() {\n    this.setState({ name: '', email: '', phone: '', errors: {} });\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3 text-left\">\n              <div className=\"card-header mb-2 py-3\">\n                <h4 className=\"mb-0\">Add Contact</h4>\n              </div>\n              <form onSubmit={e => this.onSubmit(e, dispatch)}>\n                <TextInputGroup\n                  name=\"name\"\n                  value={name}\n                  placeholder=\"Enter name\"\n                  label=\"Name\"\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n\n                <TextInputGroup\n                  name=\"email\"\n                  type=\"email\"\n                  value={email}\n                  placeholder=\"Enter email\"\n                  label=\"Email\"\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextInputGroup\n                  name=\"phone\"\n                  value={phone}\n                  placeholder=\"Enter phone\"\n                  label=\"Phone\"\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n\n                <div className=\"px-4 mb-3\">\n                  <button type=\"submit\" className=\"btn btn-block btn-primary\">\n                    Add\n                  </button>\n                </div>\n              </form>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport uuid from 'uuid';\nimport axios from 'axios';\n\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (e, dispatch) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    /* Check for errors */\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Name is required' } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n    const updContact = { name, email, phone };\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    this.reset();\n    this.props.history.push('/');\n  };\n\n  reset() {\n    this.setState({ name: '', email: '', phone: '', errors: {} });\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3 text-left\">\n              <div className=\"card-header mb-2 py-3\">\n                <h4 className=\"mb-0\">Edit Contact</h4>\n              </div>\n              <form onSubmit={e => this.onSubmit(e, dispatch)}>\n                <TextInputGroup\n                  name=\"name\"\n                  value={name}\n                  placeholder=\"Enter name\"\n                  label=\"Name\"\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n\n                <TextInputGroup\n                  name=\"email\"\n                  type=\"email\"\n                  value={email}\n                  placeholder=\"Enter email\"\n                  label=\"Email\"\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextInputGroup\n                  name=\"phone\"\n                  value={phone}\n                  placeholder=\"Enter phone\"\n                  label=\"Phone\"\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n\n                <div className=\"px-4 mb-3\">\n                  <button type=\"submit\" className=\"btn btn-block btn-primary\">\n                    Update\n                  </button>\n                </div>\n              </form>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h2 className=\"display-4\">About Contact Manager</h2>\n      <hr />\n      <p className=\"lead\">Simlpe app to manage contacts</p>\n      <p className=\"lead\">Using React Context, React Router, Bootstrap</p>\n      <p className=\"text-secondary\">Verion 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotFound = props => {\n  return (\n    <div>\n      <h4 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page not found\n      </h4>\n      <p className=\"lead\">Sorry, this page does not exist</p>\n      <button\n        className=\"btn btn-outline-dark\"\n        onClick={() => props.history.push('/')}\n      >\n        Back to home :)\n      </button>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { className } from 'postcss-selector-parser';\n\n/* Provider */\nimport { Provider } from './context';\n\n/* Components */\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route path=\"\" component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}